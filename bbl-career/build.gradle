plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'

	//querydsl
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.co'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2021.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	//eureka
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//db
	runtimeOnly 'mysql:mysql-connector-java'

	//qureydsl
	implementation group: 'com.querydsl', name: 'querydsl-jpa', version: '5.0.0'
	implementation group: 'com.querydsl', name: 'querydsl-core', version: '5.0.0'
	implementation group: 'com.querydsl', name: 'querydsl-apt', version: '5.0.0'
	annotationProcessor(
			"javax.persistence:javax.persistence-api",
			"javax.annotation:javax.annotation-api",
	)

	//config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 설정
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
